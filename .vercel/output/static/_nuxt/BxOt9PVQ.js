const y=()=>{const c=e=>{const s=/(\d{2})\/(\d{2})/,o=e.match(s);if(!o)return null;const i=parseInt(o[1]),r=parseInt(o[2]);return{description:e.substring(0,o.index).trim(),current:i,total:r}},d=e=>{const s=e.destination?.toLowerCase()||"";return s.includes("installments/financing")||s.includes("installments")&&s.includes("financing")},u=e=>{const s=c(e.description);return s!==null&&s.current===1},m=(e,s)=>(Math.abs(e.amount).toFixed(2),`${s.description.toLowerCase()}_${e.origin}`),g=(e,s)=>{const{total:o,description:i}=s,r=[],l=new Date(e.date);let n=new Date(l);n.setMonth(n.getMonth()+1),n.setDate(2);for(let a=1;a<=o;a++){let t;a===1?t=new Date(l):(t=new Date(n),t.setMonth(n.getMonth()+(a-2)));const p=t.toISOString().split("T")[0];r.push({...e,transactionId:`${e.transactionId}_${a}_${o}`,date:p,description:`${i} ${String(a).padStart(2,"0")}/${String(o).padStart(2,"0")}`,amount:e.amount})}return r};return{parseInstallment:c,isInstallmentTransaction:d,isFirstInstallment:u,processInstallments:e=>{const s=[],o=new Map,i=new Set;console.log("🔍 [Installments] Total de transações recebidas:",e.length);const r=e.filter(n=>d(n));console.log("🔍 [Installments] Transações de parcelas/financiamentos:",r.length);for(const n of e){if(!d(n)){s.push(n);continue}console.log("📝 [Installments] Processando transação:",{id:n.transactionId,description:n.description,destination:n.destination});const a=c(n.description);if(console.log("🔍 [Installments] Parse result:",{description:n.description,parsedInfo:a}),!a){console.log("❌ [Installments] Não conseguiu parsear, adicionando normalmente"),s.push(n);continue}const t=m(n,a);console.log("🔑 [Installments] Chave do grupo criada:",t),o.has(t)||(o.set(t,[]),console.log("➕ [Installments] Novo grupo criado:",t)),o.get(t).push(n),console.log("📋 [Installments] Transação adicionada ao grupo. Total no grupo:",o.get(t).length)}console.log("🔍 [Installments] Número de grupos identificados:",o.size),console.log("🔍 [Installments] Chaves dos grupos:",Array.from(o.keys()));const l=Object.fromEntries(Array.from(o.entries()).map(([n,a])=>[n,a.map(t=>({id:t.transactionId,date:t.date,description:t.description,amount:t.amount,origin:t.origin,destination:t.destination}))]));console.log("🔍 [Installments] Grupos de parcelas identificados:",JSON.stringify(l,null,2));for(const[n,a]of o)if(!i.has(n))try{const t=a.find(f=>u(f));if(!t){s.push(...a),i.add(n);continue}const p=c(t.description),I=g(t,p);s.push(...I),i.add(n)}catch{s.push(...a),i.add(n)}return s}}};export{y as u};
