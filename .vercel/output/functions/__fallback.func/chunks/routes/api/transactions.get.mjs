import{u as t,c as e,d as n,g as s}from"../../nitro/nitro.mjs";import{google as o}from"googleapis";import"node:http";import"node:https";import"node:events";import"node:buffer";import"node:fs";import"node:path";import"node:crypto";const a=["juliana","cartao juliana","conta juliana","credit card juliana","bank account juliana"],r=["gabriel","cartao gabriel","conta gabriel","bank account gabriel","credit card gabriel"];function identifyPerson(t){const e=t.toLowerCase();return a.some(t=>e.includes(t.toLowerCase()))?"Juliana":r.some(t=>e.includes(t.toLowerCase()))?"Gabriel":null}function parseInstallment(t){const e=t.match(/(\d{2})\/(\d{2})/);if(!e)return null;const n=parseInt(e[1]),s=parseInt(e[2]);return{description:t.substring(0,e.index).trim(),current:n,total:s}}function isInstallmentTransaction(t){var e;const n=(null==(e=t.destination)?void 0:e.toLowerCase())||"";return n.includes("installments/financing")||n.includes("installments")&&n.includes("financing")}function isFirstInstallment(t){const e=parseInstallment(t.description);return null!==e&&1===e.current}function createInstallmentGroupKey(t,e){return`${e.description.toLowerCase()}_${t.origin}`}function generateMonthlyInstallments(t,e){const{total:n,description:s}=e,o=[],a=new Date(t.date);let r=new Date(a);r.setMonth(r.getMonth()+1),r.setDate(2);for(let e=1;e<=n;e++){let i;1===e?i=new Date(a):(i=new Date(r),i.setMonth(r.getMonth()+(e-2)));const l=i.toISOString().split("T")[0];o.push({...t,transactionId:`${t.transactionId}_${e}_${n}`,date:l,description:`${s} ${String(e).padStart(2,"0")}/${String(n).padStart(2,"0")}`,amount:t.amount})}return o}function applyFilters(t,e){let n=t;return n=function(t,e){return e&&"Ambos"!==e?t.filter(t=>t.person===e):t}(n,e.person),n=function(t,e,n){return t.filter(t=>{const s=new Date(t.date);return!(e&&s<new Date(e))&&!(n&&s>new Date(n))})}(n,e.startDate,e.endDate),n=function(t,e){if(!e)return t;const n=e.toLowerCase();return t.filter(t=>t.description.toLowerCase().includes(n))}(n,e.searchTerm),n=function(t,e){if(!e)return t;const n=e.toLowerCase();return t.filter(t=>t.origin.toLowerCase().includes(n))}(n,e.origin),n=function(t,e){if(!e)return t;const n=e.toLowerCase();return t.filter(t=>t.destination.toLowerCase().includes(n))}(n,e.destination),n}const i=n(async n=>{try{const a=s(n),r=function(t){const e=[];t.person&&!["Juliana","Gabriel","Ambos"].includes(t.person)&&e.push(`Invalid person filter: ${t.person}. Must be one of: Juliana, Gabriel, Ambos`);const n=/^\d{4}-\d{2}-\d{2}$/;t.startDate&&!n.test(t.startDate)&&e.push(`Invalid startDate format: ${t.startDate}. Expected YYYY-MM-DD`),t.endDate&&!n.test(t.endDate)&&e.push(`Invalid endDate format: ${t.endDate}. Expected YYYY-MM-DD`),t.startDate&&t.endDate&&new Date(t.startDate)>new Date(t.endDate)&&e.push("startDate must be before or equal to endDate");return{valid:0===e.length,errors:e}}(a);if(!r.valid)throw e({statusCode:400,statusMessage:"Invalid query parameters",data:r.errors});console.log("[API] Fetching transactions with params:",a);let i=await async function(){var n;const s=t();try{const t=new o.auth.GoogleAuth({credentials:{client_email:s.googleClientEmail,private_key:null==(n=s.googlePrivateKey)?void 0:n.replace(/\\n/g,"\n")},scopes:["https://www.googleapis.com/auth/spreadsheets.readonly"]}),e=o.sheets({version:"v4",auth:t}),a=s.public.googleSpreadsheetId,r=(await e.spreadsheets.values.get({spreadsheetId:a,range:"A1:H"})).data.values;if(!r||0===r.length)return[];const i=r[0];return r.slice(1).map(t=>{const e={};return i.forEach((n,s)=>{e[n]=t[s]||""}),{transactionId:e["Transaction Id"]||"",date:e.Date||"",origin:e.Origin||"",destination:e.Destination||"",description:e.Description||"",amount:parseFloat(e.Amount)||0,recordedAt:e["Recorded at"]||"",remoteId:e["Remote Id"]||""}})}catch(t){throw console.error("Error fetching transactions from Google Sheets:",t),e({statusCode:500,statusMessage:"Failed to fetch transactions from Google Sheets",data:t.message})}}();console.log("[API] Fetched transactions from Google Sheets:",i.length),i=function(t){return t.map(t=>({...t,person:identifyPerson(t.origin)}))}(i),console.log("[API] Enriched transactions with person data");return"false"!==a.processInstallments&&!1!==a.processInstallments&&(i=function(t){const e=[],n=new Map,s=new Set;console.log("[Installments] Total transactions received:",t.length);const o=t.filter(t=>isInstallmentTransaction(t));console.log("[Installments] Installment/financing transactions:",o.length);for(const s of t){if(!isInstallmentTransaction(s)){e.push(s);continue}const t=parseInstallment(s.description);if(!t){e.push(s);continue}const o=createInstallmentGroupKey(s,t);n.has(o)||n.set(o,[]),n.get(o).push(s)}console.log("[Installments] Number of groups identified:",n.size);for(const[t,o]of n)if(!s.has(t))try{const n=o.find(t=>isFirstInstallment(t));if(!n){e.push(...o),s.add(t);continue}const a=generateMonthlyInstallments(n,parseInstallment(n.description));e.push(...a),s.add(t)}catch(n){console.error("[Installments] Error processing group:",t,n),e.push(...o),s.add(t)}return console.log("[Installments] Processed transactions:",e.length),e}(i),console.log("[API] Processed installments. New count:",i.length)),i=applyFilters(i,a),console.log("[API] Applied filters. Final count:",i.length),i}catch(t){if(t.statusCode)throw t;throw console.error("[API] Error processing transactions:",t),e({statusCode:500,statusMessage:"Failed to process transactions",data:t.message})}});export{i as default};
